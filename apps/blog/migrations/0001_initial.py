# Generated by Django 2.0.10 on 2020-01-31 10:50

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import mdeditor.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Book Title')),
                ('author', models.CharField(max_length=100, verbose_name='Author')),
                ('cover', models.ImageField(blank=True, upload_to='books', verbose_name='cover image')),
                ('score', models.DecimalField(decimal_places=1, max_digits=2, verbose_name='Douban score')),
                ('created_time', models.DateField(default=django.utils.timezone.now, null=True, verbose_name='Add time')),
                ('time_consuming', models.CharField(max_length=100, verbose_name='Reading initial time')),
                ('pid', models.CharField(blank=True, max_length=100, verbose_name='Article ID')),
            ],
            options={
                'verbose_name': 'Add book',
                'verbose_name_plural': 'Add book',
                'ordering': ['-pk'],
            },
        ),
        migrations.CreateModel(
            name='BookCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Category Name')),
            ],
            options={
                'verbose_name': 'Book list classification',
                'verbose_name_plural': 'Book list classification',
            },
        ),
        migrations.CreateModel(
            name='BookTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='label')),
            ],
            options={
                'verbose_name': 'Book list label',
                'verbose_name_plural': 'Book list label',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Category Name')),
            ],
            options={
                'verbose_name': 'Article Category',
                'verbose_name_plural': 'Article Category',
            },
        ),
        migrations.CreateModel(
            name='Courses',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Tutorial name')),
                ('cover', models.ImageField(blank=True, upload_to='course', verbose_name='Upload cover')),
                ('category', models.CharField(max_length=100, verbose_name='Tutorial Category')),
                ('introduce', models.CharField(blank=True, max_length=200, verbose_name='Tutorial Introduction')),
                ('status', models.CharField(max_length=50, verbose_name='Update status')),
                ('created_time', models.DateTimeField(default=django.utils.timezone.now, null=True, verbose_name='Creation time')),
                ('comments', models.PositiveIntegerField(default=0, verbose_name='Number of comments')),
                ('numbers', models.PositiveIntegerField(default=0, verbose_name='Number of tutorials')),
                ('views', models.PositiveIntegerField(default=0, verbose_name='Views')),
            ],
            options={
                'verbose_name': 'List of tutorials',
                'verbose_name_plural': 'List of tutorials',
            },
        ),
        migrations.CreateModel(
            name='MeanList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='menu name')),
                ('link', models.CharField(blank=True, max_length=100, null=True, verbose_name='Menu Link')),
                ('icon', models.CharField(blank=True, max_length=100, null=True, verbose_name='menu icon')),
                ('status', models.CharField(choices=[('y', 'Show'), ('n', 'Hide')], default='y', max_length=1, verbose_name='Display status')),
            ],
            options={
                'verbose_name': 'Menu Bar',
                'verbose_name_plural': 'Menu Bar',
            },
        ),
        migrations.CreateModel(
            name='Messages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='leave me a message')),
                ('admin', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Webmaster')),
            ],
            options={
                'verbose_name': 'Website message',
                'verbose_name_plural': 'Website message',
            },
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='movie name')),
                ('director', models.CharField(max_length=100, verbose_name='Director')),
                ('actor', models.CharField(max_length=100, verbose_name='Starring')),
                ('cover', models.ImageField(blank=True, upload_to='movies', verbose_name='Upload cover')),
                ('score', models.DecimalField(decimal_places=1, max_digits=2, verbose_name='Douban score')),
                ('release_time', models.DateField(verbose_name='release time')),
                ('created_time', models.DateField(default=django.utils.timezone.now, verbose_name='Add time')),
                ('length_time', models.PositiveIntegerField(default=0, verbose_name='Movie Duration')),
                ('watch_time', models.DateField(default=django.utils.timezone.now, verbose_name='watch time')),
                ('pid', models.CharField(blank=True, max_length=100, verbose_name='Article ID')),
            ],
            options={
                'verbose_name': 'Add movie',
                'verbose_name_plural': 'Add movie',
                'ordering': ['-pk'],
            },
        ),
        migrations.CreateModel(
            name='MovieCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Movie classification')),
            ],
            options={
                'verbose_name': 'Movie classification',
                'verbose_name_plural': 'Movie classification',
            },
        ),
        migrations.CreateModel(
            name='MovieTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, verbose_name='Label name')),
            ],
            options={
                'verbose_name': 'Movie label',
                'verbose_name_plural': 'Movie label',
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, unique=True, verbose_name='Title')),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('body', mdeditor.fields.MDTextField(verbose_name='body')),
                ('created_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Creation time')),
                ('modified_time', models.DateTimeField(auto_now=True, verbose_name='Modified time')),
                ('excerpt', models.CharField(blank=True, max_length=200, verbose_name='Summary')),
                ('views', models.PositiveIntegerField(default=0, verbose_name='Views')),
                ('words', models.PositiveIntegerField(default=0, verbose_name='Word count')),
                ('status', models.CharField(choices=[('p', 'Article Page'), ('c', 'Tutorial page'), ('d', 'Draft Box'), ('r', 'Recycle Bin')], default='p', max_length=1, verbose_name='Article status')),
                ('stick', models.CharField(choices=[('y', 'Sticky'), ('n', 'Do not top')], default='n', max_length=1, verbose_name='Whether sticky')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Author')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.Category', verbose_name='Article Category')),
            ],
            options={
                'verbose_name': 'Add article',
                'verbose_name_plural': 'Add article',
                'ordering': ['-created_time'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Label name')),
            ],
            options={
                'verbose_name': 'Article tags',
                'verbose_name_plural': 'Article tags',
            },
        ),
        migrations.AddField(
            model_name='post',
            name='tag',
            field=models.ManyToManyField(blank=True, to='blog.Tag', verbose_name='Tag type'),
        ),
        migrations.AddField(
            model_name='movie',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.MovieCategory', verbose_name='Movie Category'),
        ),
        migrations.AddField(
            model_name='movie',
            name='tag',
            field=models.ManyToManyField(to='blog.MovieTag', verbose_name='Movie Tag'),
        ),
        migrations.AddField(
            model_name='courses',
            name='article',
            field=models.ManyToManyField(blank=True, to='blog.Post', verbose_name='tutorial article'),
        ),
        migrations.AddField(
            model_name='courses',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL, verbose_name='Author'),
        ),
        migrations.AddField(
            model_name='book',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.BookCategory', verbose_name='book category'),
        ),
        migrations.AddField(
            model_name='book',
            name='tag',
            field=models.ManyToManyField(to='blog.BookTag', verbose_name='Book Tag'),
        ),
    ]
