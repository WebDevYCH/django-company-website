# Generated by Django 2.2.11 on 2020-07-10 05:15

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BlogSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sitename', models.CharField(default='', max_length=200, verbose_name='sitename')),
                ('site_description', models.TextField(default='', max_length=1000, verbose_name='site_description')),
                ('site_seo_description', models.TextField(default='', max_length=1000, verbose_name='site_seo_description')),
                ('site_keywords', models.TextField(default='', max_length=1000, verbose_name='site_keywords')),
                ('article_sub_length', models.IntegerField(default=200, verbose_name='article_sub_length')),
                ('sidebar_article_count', models.IntegerField(default=10, verbose_name='sidebar_article_count')),
                ('sidebar_comment_count', models.IntegerField(default=5, verbose_name='sidebar_comment_count')),
                ('show_google_adsense', models.BooleanField(default=False, verbose_name='Whether to display Google ads')),
                ('google_adsense_codes', models.TextField(blank=True, default='', max_length=2000, null=True, verbose_name='advertising content')),
                ('open_site_comment', models.BooleanField(default=True, verbose_name='Whether to open the website comment function')),
                ('beiancode', models.CharField(blank=True, default='', max_length=2000, null=True, verbose_name='Record number')),
                ('analyticscode', models.TextField(default='', max_length=1000, verbose_name='Site Statistics Code')),
                ('show_gongan_code', models.BooleanField(default=False, verbose_name='Whether to display the public security record number')),
                ('gongan_beiancode', models.TextField(blank=True, default='', max_length=2000, null=True, verbose_name='Public Security Record Number')),
                ('resource_path', models.CharField(default='/var/www/resource/', max_length=300, verbose_name='static file save address')),
            ],
            options={
                'verbose_name': 'Website configuration',
                'verbose_name_plural': 'Website configuration',
            },
        ),
        migrations.CreateModel(
            name='Links',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True, verbose_name='name')),
                ('link', models.URLField(verbose_name='link')),
                ('sequence', models.IntegerField(unique=True, verbose_name='sequence')),
                ('is_enable', models.BooleanField(default=True, verbose_name='is_enable')),
                ('show_type', models.CharField(choices=[('i', 'Home'), ('l', 'List page'), ('p', 'Article page'), ('a', 'Total Station'), ('s', 'Friendly Link Page')], default='i', max_length=1, verbose_name='show type')),
                ('created_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='created time')),
                ('last_mod_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='modified time')),
            ],
            options={
                'verbose_name': 'Links',
                'verbose_name_plural': 'Links',
                'ordering': ['sequence'],
            },
        ),
        migrations.CreateModel(
            name='SideBar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('content', models.TextField(verbose_name='content')),
                ('sequence', models.IntegerField(unique=True, verbose_name='sequence')),
                ('is_enable', models.BooleanField(default=True, verbose_name='is enable')),
                ('created_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='created time')),
                ('last_mod_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='modified time')),
            ],
            options={
                'verbose_name': 'Sidebar',
                'verbose_name_plural': 'Sidebar',
                'ordering': ['sequence'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='create time')),
                ('last_mod_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='modified time')),
                ('is_removed', models.BooleanField(default=False, verbose_name='Is Removed')),
                ('name', models.CharField(max_length=30, unique=True, verbose_name='name')),
                ('slug', models.SlugField(blank=True, default='no-slug', max_length=60)),
            ],
            options={
                'verbose_name': 'tags',
                'verbose_name_plural': 'tags',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='create time')),
                ('last_mod_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='modified time')),
                ('is_removed', models.BooleanField(default=False, verbose_name='Is Removed')),
                ('name', models.CharField(max_length=30, unique=True, verbose_name='name')),
                ('slug', models.SlugField(blank=True, default='no-slug', max_length=60)),
                ('parent_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='blog.Category', verbose_name='parent category')),
            ],
            options={
                'verbose_name': 'category',
                'verbose_name_plural': 'category',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='create time')),
                ('last_mod_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='modified time')),
                ('is_removed', models.BooleanField(default=False, verbose_name='Is Removed')),
                ('title', models.CharField(max_length=200, unique=True, verbose_name='title')),
                ('body', models.TextField(verbose_name='content')),
                ('pub_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='publish time')),
                ('status', models.CharField(choices=[('d', 'Draft'), ('p', 'Publish')], default='p', max_length=1, verbose_name='status')),
                ('comment_status', models.CharField(choices=[('o', 'Open'), ('c', 'Close')], default='o', max_length=1, verbose_name='comment_status')),
                ('type', models.CharField(choices=[('a', 'article'), ('p', 'page')], default='a', max_length=1, verbose_name='type')),
                ('views', models.PositiveIntegerField(default=0, verbose_name='views')),
                ('article_order', models.IntegerField(default=0, verbose_name='article order')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='author')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.Category', verbose_name='category')),
                ('tags', models.ManyToManyField(blank=True, to='blog.Tag', verbose_name='tags')),
            ],
            options={
                'verbose_name': 'Article',
                'verbose_name_plural': 'Article',
                'ordering': ['-article_order', '-pub_time'],
                'get_latest_by': 'id',
            },
        ),
    ]
